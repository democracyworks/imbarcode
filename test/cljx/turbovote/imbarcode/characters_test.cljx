(ns turbovote.imbarcode.characters-test
  #+clj (:require [clojure.test :refer :all]
                  [turbovote.imbarcode.characters :refer :all])
  #+cljs (:require [cemerick.cljs.test :as t]
                   [turbovote.imbarcode.characters :refer [codewords->characters-base
                                                           adjust-characters]])
  #+cljs (:require-macros [cemerick.cljs.test
                           :refer (is deftest with-test run-tests testing test-var)]))

(deftest codewords->characters-base-test
  (let [test-cases
        {[0 0 0 0 559 202 508 451 124 34]
         [0x001F 0x001F 0x001F 0x001F 0x1524 0x01A3 0x043C 0x1838 0x012B 0x0076]
         [0 0 15 14 290 567 385 48 388 666]
         [0x001F 0x001F 0x1D40 0x0057 0x0255 0x0724 0x04E8 0x009D 0x030B 0x0583]
         [659 110 1113 1363 198 413 470 468 1333 1026]
         [0x1154 0x00F8 0x1E01 0x0110 0x019A 0x1298 0x03A2 0x03A1 0x0084 0x0B11]
         [673 787 607 1022 861 19 816 1294 35 602]
         [0x1234 0x085C 0x08E4 0x0B06 0x1922 0x1740 0x0839 0x1200 0x0DC0 0x04D4]}]
    (doseq [[input output] test-cases]
      (is (= (codewords->characters-base input) output)))))

(deftest adjust-characters-test
  (let [test-cases
        {[[0x001F 0x001F 0x001F 0x001F 0x1524 0x01A3 0x043C 0x1838 0x012B 0x0076]
          0x051]
         [0x1FE0 0x001F 0x001F 0x001F 0x0ADB 0x01A3 0x1BC3 0x1838 0x012B 0x0076]
         [[0x001F 0x001F 0x1D40 0x0057 0x0255 0x0724 0x04E8 0x009D 0x030B 0x0583]
          0x065]
         [0x1FE0 0x001F 0x02BF 0x0057 0x0255 0x18DB 0x1B17 0x009D 0x030B 0x0583]
         [[0x1154 0x00F8 0x1E01 0x0110 0x019A 0x1298 0x03A2 0x03A1 0x0084 0x0B11]
          0x606]
         [0x1154 0x1F07 0x01FE 0x0110 0x019A 0x1298 0x03A2 0x03A1 0x0084 0x14EE]
         [[0x1234 0x085C 0x08E4 0x0B06 0x1922 0x1740 0x0839 0x1200 0x0DC0 0x04D4]
          0x751]
         [0x0DCB 0x085C 0x08E4 0x0B06 0x06DD 0x1740 0x17C6 0x1200 0x123F 0x1B2B]}]
    (doseq [[inputs output] test-cases]
      (is (= (apply adjust-characters inputs) output)))))
